apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "geodish-app.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "geodish-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "geodish-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "geodish-app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # Run app directly with Python
          command: ["/bin/sh"]
          args: ["-c", "pip install flask pymongo flask-cors && python app/app.py"]
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          env:
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongodb.secretName }}
                  key: {{ .Values.mongodb.connectionStringKey }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}