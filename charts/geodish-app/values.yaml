# Default values for geodish-app
# This is a YAML-formatted file declaring variables for the GeoDish Flask application

#==========================================
# Image Configuration
#==========================================
image:
  repository: 893692751288.dkr.ecr.ap-south-1.amazonaws.com/geodish-app
  tag: "latest"
  pullPolicy: Always

# Image pull secrets (for ECR authentication)
imagePullSecrets:
  - name: ecr-secret

#==========================================
# Application Configuration
#==========================================
app:
  name: geodish-app
  version: "1.0.0"
  port: 5000
  environment: development
  
  # Flask-specific settings
  flask:
    secretKey: "dev-secret-key-change-in-production"
    debug: false
    
#==========================================
# Database Configuration (MongoDB)
#==========================================
mongodb:
  enabled: true
  # Connection details (will be provided by ArgoCD)
  host: mongodb.geodish-app.svc.cluster.local
  port: 27017
  database: geodish
  # Authentication disabled for development
  auth:
    enabled: false
    username: ""
    password: ""

#==========================================
# Deployment Configuration
#==========================================
replicaCount: 2

deployment:
  annotations: {}
  labels: {}

#==========================================
# Pod Configuration
#==========================================
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "5000"
  prometheus.io/path: "/metrics"

podLabels:
  app.kubernetes.io/component: web-server
  environment: development

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000
  capabilities:
    drop:
    - ALL

#==========================================
# Resource Configuration
#==========================================
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

#==========================================
# Health Checks
#==========================================
livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /ready
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

#==========================================
# Service Configuration
#==========================================
service:
  type: ClusterIP
  port: 80
  targetPort: 5000
  annotations: {}

#==========================================
# Ingress Configuration
#==========================================
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
  hosts:
    - host: geodish-app.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

#==========================================
# Horizontal Pod Autoscaler
#==========================================
autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

#==========================================
# Node Selection
#==========================================
nodeSelector: {}

tolerations: []

affinity: {}

#==========================================
# Service Account
#==========================================
serviceAccount:
  create: true
  annotations: {}
  name: ""

#==========================================
# Configuration & Secrets
#==========================================
configMap:
  data:
    APP_ENV: "development"
    LOG_LEVEL: "INFO"
    FLASK_APP: "app.py"

secrets:
  enabled: false
  data: {}
