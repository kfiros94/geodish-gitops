apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - name: mongodb
        image: "{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}"
        imagePullPolicy: {{ .Values.mongodb.image.pullPolicy }}
        ports:
        - name: mongodb
          containerPort: {{ .Values.mongodb.port }}
          protocol: TCP
        resources:
          {{- toYaml .Values.mongodb.resources | nindent 10 }}
        livenessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        {{- if .Values.mongodb.persistence.enabled }}
        volumeMounts:
        - name: mongodb-storage
          mountPath: /data/db
        {{- end }}
      {{- if .Values.mongodb.persistence.enabled }}
      volumes:
      - name: mongodb-storage
        persistentVolumeClaim:
          claimName: mongodb-pvc
      {{- end }}